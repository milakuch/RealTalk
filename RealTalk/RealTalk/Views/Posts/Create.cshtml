@model RealTalk.Models.Post

@{
    ViewBag.Title = "Create a post";
}

@*<head>
        <link href="CreatePost.css" rel="stylesheet" type="text/css" />

    </head>*@

@*<style>
        body {
        }

        .random-class {
            border: solid 10px yellow;
        }

        .container {
            text-align: center;
        }

        .center-box {
            width: 500px;
        }
    </style>*@

<!--Create-->
<div class="col-12 text-center">
    @using (Html.BeginForm())
    {
        @Html.AntiForgeryToken()
        <div class="box1 sb2 text-left txtdark">
            <h4 class=""><strong>Create a new post</strong></h4><br />
            @Html.ValidationSummary(true, "", new { @class = "text-danger" })

            <div class="form-group">
                @Html.LabelFor(model => model.Title, htmlAttributes: new { @class = "control-label col-md-2" })
                @Html.EditorFor(model => model.Title, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.Title, "", new { @class = "text-danger" })
            </div>

            <div class="form-group">
                @Html.LabelFor(model => model.Content, htmlAttributes: new { @class = "control-label col-md-2" })
                <div class="mymultitextboxclass">
                    @Html.TextAreaFor(model => model.Content, new { htmlAttributes = new { @class = "form-control" } })
                </div>
                @Html.ValidationMessageFor(model => model.Content, "", new { @class = "text-danger" })
            </div>


            @*<div class="form-group">
                @Html.LabelFor(model => model.TagsText, htmlAttributes: new { @class = "control-label col-md-2" })
                @Html.EditorFor(model => model.TagsText, new { htmlAttributes = new { @class = "form-control" } })
            </div>*@

            <!--Submit-->
            <button type="submit" class="btn btn-outline-light my-2 my-sm-0">Create a post</button> <br><br><br>
        </div>
    }
</div>



@section Scripts {
    @Scripts.Render("~/bundles/jqueryval")
}
